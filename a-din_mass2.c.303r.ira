
;; Function main (main, funcdef_no=6, decl_uid=3702, cgraph_uid=7, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Removing SCRATCH to p92 in insn #5 (nop 2)
rescanning insn with uid = 5.
Removing SCRATCH to p93 in insn #34 (nop 3)
rescanning insn with uid = 34.
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:4000 NO_REX_SSE_REGS:4000 SSE_REGS:4000 MMX_REGS:14000 INT_SSE_REGS:14000 ALL_REGS:202000 MEM:4000
  a3(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a4(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:320000 MEM:12000
  a5(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a7(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a8(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a9(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 40(l0): point = 0
   Insn 39(l0): point = 2
   Insn 36(l0): point = 5
   Insn 35(l0): point = 8
   Insn 34(l0): point = 10
   Insn 30(l0): point = 12
   Insn 27(l0): point = 14
   Insn 26(l0): point = 16
   Insn 25(l0): point = 18
   Insn 24(l0): point = 20
   Insn 23(l0): point = 22
   Insn 22(l0): point = 24
   Insn 21(l0): point = 26
   Insn 20(l0): point = 28
   Insn 19(l0): point = 30
   Insn 18(l0): point = 32
   Insn 17(l0): point = 34
   Insn 16(l0): point = 36
   Insn 15(l0): point = 38
   Insn 14(l0): point = 40
   Insn 13(l0): point = 42
   Insn 12(l0): point = 44
   Insn 11(l0): point = 46
   Insn 10(l0): point = 48
   Insn 9(l0): point = 50
   Insn 8(l0): point = 52
   Insn 5(l0): point = 54
   Insn 3(l0): point = 56
   Insn 2(l0): point = 58
 a0(r85): [8..12] [3..4]
 a1(r93): [10..10]
 a2(r84): [13..14]
 a3(r90): [19..20]
 a4(r89): [23..24]
 a5(r83): [29..30]
 a6(r82): [31..32]
 a7(r88): [39..40]
 a8(r87): [43..44]
 a9(r86): [51..52]
 a10(r92): [54..54]
Compressing live ranges: from 61 to 22 - 36%
Ranges after the compression:
 a0(r85): [0..4]
 a1(r93): [3..3]
 a2(r84): [5..6]
 a3(r90): [7..8]
 a4(r89): [9..10]
 a5(r83): [11..12]
 a6(r82): [13..14]
 a7(r88): [15..16]
 a8(r87): [17..18]
 a9(r86): [19..20]
 a10(r92): [21..21]
  pref0:a3(r90)<-hr5@1500
  pref1:a4(r89)<-hr0@1500
  pref2:a7(r88)<-hr5@1500
  pref3:a8(r87)<-hr4@1500
  pref4:a9(r86)<-hr5@1500
  pref5:a0(r85)<-hr0@1500
  pref6:a5(r83)<-hr5@1500
  regions=1, blocks=5, points=22
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    6:r82  l0     0    5:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    9:r86  l0     0    8:r87  l0     0    7:r88  l0     0    4:r89  l0     0
    3:r90  l0     0   10:r92  l0     0    1:r93  l0     1
+++Costs: overall -7000, reg -7000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,5u} r1={6d} r2={6d} r4={7d,2u} r5={10d,5u} r6={1d,4u} r7={1d,9u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,3u} r17={8d,1u} r18={5d} r19={1d,11u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r92={1d} r93={1d} 
;;    total ref usage 425{376d,49u,0e} in 29{24 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 92 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [3 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) "din_mass2.c":6:1 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [4 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) "din_mass2.c":6:1 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.3711+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 92)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "din_mass2.c":6:1 1382 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 5 9 2 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f9e5b8bd5a0 *.LC0>)) "din_mass2.c":8:2 82 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 86)) "din_mass2.c":8:2 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f9e5b8bd5a0 *.LC0>)
            (nil))))
(insn 10 9 11 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "din_mass2.c":8:2 85 {*movqi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f9e5bb80a00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "din_mass2.c":8:2 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) "din_mass2.c":9:2 247 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 87)) "din_mass2.c":9:2 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f9e5b8bd630 *.LC1>)) "din_mass2.c":9:2 82 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 88)) "din_mass2.c":9:2 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f9e5b8bd630 *.LC1>)
            (nil))))
(insn 16 15 17 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "din_mass2.c":9:2 85 {*movqi_internal}
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f9e5bb82600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "din_mass2.c":9:2 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 82 [ N.0_1 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 N+0 S4 A32])) "din_mass2.c":11:19 83 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ N.0_1 ]))) "din_mass2.c":11:19 160 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ N.0_1 ])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 83 [ _2 ])) "din_mass2.c":11:19 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f9e5bba1200 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "din_mass2.c":11:19 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 89)
        (reg:DI 0 ax)) "din_mass2.c":11:19 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 89)
            (nil))))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 A+0 S8 A64])
        (reg/f:DI 89)) "din_mass2.c":11:19 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 90)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f9e5b8bd6c0 *.LC2>)) "din_mass2.c":12:2 82 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 90)) "din_mass2.c":12:2 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f9e5b8bd6c0 *.LC2>)
            (nil))))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f9e5bb82100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "din_mass2.c":12:2 1013 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 30 2 (set (reg:SI 84 [ _9 ])
        (const_int 0 [0])) "din_mass2.c":14:9 83 {*movsi_internal}
     (nil))
(insn 30 27 34 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _9 ])) "din_mass2.c":15:1 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _9 ])
        (nil)))
(insn 34 30 35 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.3711+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 93))
        ]) "din_mass2.c":15:1 1387 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 93)
        (nil)))
(jump_insn 35 34 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "din_mass2.c":15:1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 42 35 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 36 42 37 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f9e5b8b9900 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "din_mass2.c":15:1 1002 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 37 36 38)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 85
;; lr  def 	 0 [ax]
(code_label 38 37 43 4 3 (nil) [1 uses])
(note 43 38 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 43 40 4 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "din_mass2.c":15:1 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 40 39 0 4 (use (reg/i:SI 0 ax)) "din_mass2.c":15:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

